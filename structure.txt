php-program:
	modules

module:
	instructions

instruction:
	expression
	funcall  (sideeffect)
	controlstruct
	declaration
	comment
	empty


expression:
	operator
	operands
	

operators:
	arithmetic
	assign
	bit
	compare
	error
	execution
	incdec
	logic
	string
	array
	checktype

arithmetic:
	u+  #конвертация в int или float
	u-  #смена знака на минус
	+
	-
	*
	/
	%  деление по модулю
	** возведение в степень

assign:
	=
	binop=

bit:
	&  #and
	|  #or
	^  #xor
	~  #инверсия
	<< #сдвиг влево  (умножение на 2)
	>> #сдвиг вправо (деление на 2)

compare:
	==   #равно? (после преобразования типов)
	===  #тождественно равно? (без преобразования типов - изначально одинаковый тип)
	!=   #не равно? (после преобразования типов)
	<>   #не равно? (после преобразования типов)
	!==  #тождественно не равно? (без преобразованият типов - не равно либо по значению,
	     		      	      либо по типу)
	<    #строго меньше?
	>    #строго больше?
	<=   #меньше или равно?
	>=   #больше или равно?
	<=>  #космический корабль? (spaceship) результат целое число меньше, больше или равно 0
	      в зависимости от аналогичного соотношения операндов

error:
	@  #оператор управления ошибками. Любые сообщения об ошибках в выражении-операнде игнорируются

execution:
	`` #оператор выполнения консольной команды. операндом является
	    параметризуемая строка, представляющая команду

incdec:
	++op #префиксное увеличение на 1
	op++ #постфиксное увеличение на 1
	--op #префиксное уменьшение на 1
	op-- #постфиксное уменьшение на 1

logic:
	and
	or
	xor
	!
	&& #как and, но больший приоритет
	|| #как or, но больший приоритет

string:
	.  #конкатенация
	.= #конкатенация с присваиванием

array:
	+  #объединение массивов результатом будет левый массив с
	    присоединенным правым. В случае ассоциативных массивов
	    и совпадения ключей, по этим ключам будут значения из левого
	== #равно? равно в том случае, если одни и теже пары key-value
	=== #тождественно равно? в том случае, если те же пары key-value
	     в том же порядке и того же типа
	!= #не равно?
	<> #не равно?
	!== #тождественно не равно?

checktype:
	instanceof  #проверка, является ли левый операнд объектом класса
	             - правого операнда



operands:
	expression
	varvalue
	fieldvalue
	funcvalue
	methodvalue
	constvalue

controlstruct:
	if
	else
	elseif/else if
	altif
	altelse
	altelseif
	while
	altwhile
	do-while
	for
	altfor
	foreach
	altforeach
	switch
	altswitch
	break
	continue
	switch
	declare
	return
	require
	include
	require_once
	include_once
	goto
	
